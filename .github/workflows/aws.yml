# Uses https://github.com/yvesgurcan/deploy-lambda-function

name: Deploy Lambda
on:
  push:
    branches: [ main ]
jobs:
  deploy-python-lambda:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        python-version: 3.13
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: cat src/requirements.txt | xargs -n 1 python3 -m pip install --target package/
    - run: cp src/free_cfa.py src/get_name_and_number.py src/send_text.py package
    - run: cd package/ && zip -r ../package.zip **
    - run: aws lambda update-function-code --function-name=blackhawks-cfa-texter --zip-file=fileb://package.zip

  deploy-backend-lambda:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 22
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - run: zip -j lambda.zip ./backend/index.mjs
    - run: aws lambda update-function-code --function-name=BlackhawksCfaBackend --zip-file=fileb://lambda.zip

  deploy-frontend-s3:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Copy index file to S3 bucket
      run: |
        aws s3 cp frontend/index.html s3://${{ secrets.bucket_name }}/index.html
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
